# -*- coding: utf-8 -*-
"""cybersecurityproject.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11fq8Wh_0tGBIMiZGo8ndxT2Ej0broGad
"""

pip install pandas scikit-learn gradio

# ------------------------------
# Phishing URL Detector (Colab + Gradio)
# ------------------------------

import pandas as pd
import gradio as gr
import io
from google.colab import files

# ---------- Step 1: Upload CSV ----------
print("Please upload your PhishTank CSV file (e.g., verified_online.csv).")
uploaded = files.upload()  # Opens a file chooser in Colab

# Check if file was uploaded
if len(uploaded) == 0:
    raise ValueError("No file uploaded! Please upload your PhishTank CSV file.")

# Get the first uploaded file
csv_file = list(uploaded.keys())[0]

try:
    df = pd.read_csv(io.BytesIO(uploaded[csv_file]))
except Exception as e:
    raise ValueError(f"Error reading CSV file: {e}")

print(f"‚úÖ Loaded CSV: {csv_file}")
print(f"Total entries: {len(df)}")

# ---------- Step 2: URL Checking Function ----------
def check_url(input_url):
    if not input_url.strip():
        return "‚ö†Ô∏è Please enter a URL to check."

    input_url = input_url.strip().lower()

    # Check for exact or partial match
    match = df[df['url'].str.contains(input_url, case=False, na=False)]

    if not match.empty:
        row = match.iloc[0]
        return (f"üö® **Phishing Detected!**\n\n"
                f"- **Reported on:** {row.get('submission_time','Unknown')}\n"
                f"- **Verified:** {row.get('verified','no')}\n"
                f"- **URL:** {row.get('url','')}")
    else:
        return "‚úÖ SAFE: This URL is not found in PhishTank's phishing database."

# ---------- Step 3: Gradio UI ----------
iface = gr.Interface(
    fn=check_url,
    inputs=gr.Textbox(label="Enter URL to check"),
    outputs="text",
    title="üîí Phishing URL Detector",
    description="Enter a website URL to check if it's listed as a phishing site."
)

iface.launch()